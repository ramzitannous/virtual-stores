name: Build and Deploy Backend

on:
  push:
    branches:
      - master
    paths-ignore: 
      - "README.*"
      - "django.po"

jobs:

  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:12.2-alpine
        env:
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test123
          POSTGRES_DB: stores

        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    
    steps:
      - uses: actions/checkout@v1

      - uses: actions/cache@v1
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8.2'

      - name: Setup Poetry
        uses: abatilo/actions-poetry@v2.0.0
        with:
          poetry-version: '1.1.4'
  
      - name: Run Tests
        env:
          DATABASE_URL: "postgres://test:test123@localhost:5432/stores"
          ENABLE_EMAIL: 0
          REDIS_URL: "redis://localhost:6379/0"
        run: bash scripts/run_tests.sh
    
      - name: Login to Heroku Container registry
        env: 
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: heroku container:login 

      - name: create env file
        run: |
          touch .env
          echo GS_BUCKET_NAME=${{ secrets.GS_BUCKET_NAME }} > .env
          echo GS_CREDENTIALS=${{ secrets.GS_CREDENTIALS }} >> .env
          ls -a
          cat .env
           
      - name: Publish image
        uses: elgohr/Publish-Docker-Github-Action@v5
        with:
          name: registry.heroku.com/${{ secrets.HEROKU_APP_NAME }}/web
          username: _
          password: "${{ secrets.HEROKU_API_KEY }}"
          registry: registry.heroku.com
          cache: true
          buildargs: GITHUB_SHA,GITHUB_REF
        env: 
          GS_CREDENTIALS: ${{ secrets.GS_CREDENTIALS }}
          GS_BUCKET_NAME: ${{ secrets.GS_BUCKET_NAME }}

      - name: Release
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: heroku container:release -a ${{ secrets.HEROKU_APP_NAME }} web 
 
